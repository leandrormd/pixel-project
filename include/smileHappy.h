#include <FastLED.h>
CRGB smileHappy[256] = {
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(255, 255, 0),
  CRGB(255, 255, 0),
  CRGB(255, 255, 0),
  CRGB(255, 255, 0),
  CRGB(255, 255, 0),
  CRGB(255, 255, 0),
  CRGB(255, 255, 0),
  CRGB(255, 255, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(255, 255, 0),
  CRGB(255, 255, 0),
  CRGB(255, 255, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(255, 255, 0),
  CRGB(255, 255, 0),
  CRGB(255, 255, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(255, 255, 0),
  CRGB(255, 255, 0),
  CRGB(255, 255, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(255, 255, 0),
  CRGB(255, 255, 0),
  CRGB(255, 255, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(255, 255, 0),
  CRGB(255, 255, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(255, 255, 0),
  CRGB(255, 255, 0),
  CRGB(0, 0, 0),
  CRGB(255, 255, 0),
  CRGB(255, 255, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(255, 255, 0),
  CRGB(255, 255, 0),
  CRGB(255, 255, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(255, 255, 0),
  CRGB(255, 255, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(255, 255, 0),
  CRGB(255, 255, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(255, 255, 0),
  CRGB(255, 255, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(255, 255, 0),
  CRGB(255, 255, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(255, 255, 0),
  CRGB(255, 255, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(255, 255, 0),
  CRGB(255, 255, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(255, 255, 0),
  CRGB(255, 255, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(255, 255, 0),
  CRGB(255, 255, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(255, 255, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(255, 255, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(255, 255, 0),
  CRGB(255, 255, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(255, 255, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(255, 255, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(255, 255, 0),
  CRGB(255, 255, 0),
  CRGB(255, 255, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(255, 255, 0),
  CRGB(255, 255, 0),
  CRGB(255, 255, 0),
  CRGB(255, 255, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(255, 255, 0),
  CRGB(255, 255, 0),
  CRGB(0, 0, 0),
  CRGB(255, 255, 0),
  CRGB(255, 255, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(255, 255, 0),
  CRGB(255, 255, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(255, 255, 0),
  CRGB(255, 255, 0),
  CRGB(255, 255, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(255, 255, 0),
  CRGB(255, 255, 0),
  CRGB(255, 255, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(255, 255, 0),
  CRGB(255, 255, 0),
  CRGB(255, 255, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(255, 255, 0),
  CRGB(255, 255, 0),
  CRGB(255, 255, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(255, 255, 0),
  CRGB(255, 255, 0),
  CRGB(255, 255, 0),
  CRGB(255, 255, 0),
  CRGB(255, 255, 0),
  CRGB(255, 255, 0),
  CRGB(255, 255, 0),
  CRGB(255, 255, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0),
  CRGB(0, 0, 0)
};